[{"/Users/koushik/Documents/projects/opyn-challenge/src/index.tsx":"1","/Users/koushik/Documents/projects/opyn-challenge/src/pages/App.tsx":"2","/Users/koushik/Documents/projects/opyn-challenge/src/components/Header.tsx":"3","/Users/koushik/Documents/projects/opyn-challenge/src/service/metamask.ts":"4","/Users/koushik/Documents/projects/opyn-challenge/src/components/Options.tsx":"5","/Users/koushik/Documents/projects/opyn-challenge/src/service/util.ts":"6","/Users/koushik/Documents/projects/opyn-challenge/src/components/If.tsx":"7","/Users/koushik/Documents/projects/opyn-challenge/src/context.tsx":"8"},{"size":437,"mtime":1614336458089,"results":"9","hashOfConfig":"10"},{"size":584,"mtime":1614338478596,"results":"11","hashOfConfig":"10"},{"size":2202,"mtime":1614338825490,"results":"12","hashOfConfig":"10"},{"size":540,"mtime":1614322459640,"results":"13","hashOfConfig":"10"},{"size":8666,"mtime":1614338893838,"results":"14","hashOfConfig":"10"},{"size":2075,"mtime":1614332043176,"results":"15","hashOfConfig":"10"},{"size":240,"mtime":1614233638934,"results":"16","hashOfConfig":"10"},{"size":1123,"mtime":1614338707720,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1e8nm5g",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/koushik/Documents/projects/opyn-challenge/src/index.tsx",[],["36","37","38","39","40","41"],"/Users/koushik/Documents/projects/opyn-challenge/src/pages/App.tsx",[],"/Users/koushik/Documents/projects/opyn-challenge/src/components/Header.tsx",["42"],"/Users/koushik/Documents/projects/opyn-challenge/src/service/metamask.ts",["43"],"declare global {\n  interface Window { ethereum: any; }\n}\n\nexport const isMetaMaskInstalled = (): boolean => {\n  return typeof window.ethereum !== 'undefined';\n};\n\nexport const connectMetaMask = async () => {\n  const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n  return accounts[0];\n};\n\nexport const getAccount = async () => {\n  const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n  return accounts[0];\n};\n\nexport const isConnected = async () => {\n  window.ethereum.isConnected();\n};\n","/Users/koushik/Documents/projects/opyn-challenge/src/components/Options.tsx",["44","45","46"],"/Users/koushik/Documents/projects/opyn-challenge/src/service/util.ts",[],"/Users/koushik/Documents/projects/opyn-challenge/src/components/If.tsx",["47"],"/Users/koushik/Documents/projects/opyn-challenge/src/context.tsx",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":45,"column":16,"nodeType":"64","messageId":"65","endLine":45,"endColumn":19,"suggestions":"66"},{"ruleId":"62","severity":1,"message":"63","line":2,"column":32,"nodeType":"64","messageId":"65","endLine":2,"endColumn":35,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"63","line":54,"column":65,"nodeType":"64","messageId":"65","endLine":54,"endColumn":68,"suggestions":"68"},{"ruleId":"62","severity":1,"message":"63","line":78,"column":11,"nodeType":"64","messageId":"65","endLine":78,"endColumn":14,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":269,"column":29,"nodeType":"72","messageId":"73","endLine":269,"endColumn":34},{"ruleId":"70","severity":1,"message":"74","line":1,"column":10,"nodeType":"72","messageId":"73","endLine":1,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":12,"column":11,"nodeType":"64","messageId":"65","endLine":12,"endColumn":14,"suggestions":"75"},{"ruleId":"62","severity":1,"message":"63","line":26,"column":40,"nodeType":"64","messageId":"65","endLine":26,"endColumn":43,"suggestions":"76"},"lines-around-directive",["77"],"no-spaced-func",["78"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["79","80"],["81","82"],["83","84"],["85","86"],"@typescript-eslint/no-unused-vars","'index' is defined but never used.","Identifier","unusedVar","'type' is defined but never used.",["87","88"],["89","90"],"padding-line-between-statements","func-call-spacing",{"messageId":"91","fix":"92","desc":"93"},{"messageId":"94","fix":"95","desc":"96"},{"messageId":"91","fix":"97","desc":"93"},{"messageId":"94","fix":"98","desc":"96"},{"messageId":"91","fix":"99","desc":"93"},{"messageId":"94","fix":"100","desc":"96"},{"messageId":"91","fix":"101","desc":"93"},{"messageId":"94","fix":"102","desc":"96"},{"messageId":"91","fix":"103","desc":"93"},{"messageId":"94","fix":"104","desc":"96"},{"messageId":"91","fix":"105","desc":"93"},{"messageId":"94","fix":"106","desc":"96"},"suggestUnknown",{"range":"107","text":"108"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"107","text":"109"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"110","text":"108"},{"range":"110","text":"109"},{"range":"111","text":"108"},{"range":"111","text":"109"},{"range":"112","text":"108"},{"range":"112","text":"109"},{"range":"113","text":"108"},{"range":"113","text":"109"},{"range":"114","text":"108"},{"range":"114","text":"109"},[1172,1175],"unknown","never",[48,51],[1200,1203],[2097,2100],[251,254],[653,656]]